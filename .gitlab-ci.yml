# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
image: node:14-alpine
stages:
- build
- test
- deploy
cache:
  paths:
  - node_modules/
install_dependencies:
  stage: build
  script:
  - npm install
  artifacts:
    paths:
    - node_modules/
testing:
  stage: test
  script: npm test
deploy-to-vercel:
  stage: deploy
  image: node:14-alpine
  variables:
    PREVIEW_URL: "$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG.$VERCEL_USER.vercel.app"
    VERCEL_ORG_ID: "$VERCEL_ORG_ID"
    VERCEL_PROJECT_ID: "$VERCEL_PROJECT_ID"
  rules:
  - if: "$CI_COMMIT_TAG"
  - if: "$CI_COMMIT_BRANCH == 'main'"
  environment:
    name: vercel/$CI_COMMIT_REF_NAME
    url: https://$PREVIEW_URL
  script:
  - npm i -g vercel
  - DEPLOYMENT_URL=$(VERCEL_ORG_ID=$VERCEL_ORG_ID VERCEL_PROJECT_ID=$VERCEL_PROJECT_ID
    vercel --confirm -t $VERCEL_TOKEN --scope $VERCEL_USER)
  - vercel alias set $DEPLOYMENT_URL $PREVIEW_URL -t $VERCEL_TOKEN --scope $VERCEL_USER
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
